//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\91018\Documents\GitHub\zlua\projects\zlua\Compiler\Lua.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace zlua.Compiler {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="AbstractLuaParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface ILuaVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by the <c>emptyStat</c>
	/// labeled alternative in <see cref="AbstractLuaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEmptyStat([NotNull] AbstractLuaParser.EmptyStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>assignStat</c>
	/// labeled alternative in <see cref="AbstractLuaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignStat([NotNull] AbstractLuaParser.AssignStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>functionCallStat</c>
	/// labeled alternative in <see cref="AbstractLuaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallStat([NotNull] AbstractLuaParser.FunctionCallStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>breakStat</c>
	/// labeled alternative in <see cref="AbstractLuaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStat([NotNull] AbstractLuaParser.BreakStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>doStat</c>
	/// labeled alternative in <see cref="AbstractLuaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoStat([NotNull] AbstractLuaParser.DoStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>whileStat</c>
	/// labeled alternative in <see cref="AbstractLuaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStat([NotNull] AbstractLuaParser.WhileStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>repeatStat</c>
	/// labeled alternative in <see cref="AbstractLuaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRepeatStat([NotNull] AbstractLuaParser.RepeatStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>ifStat</c>
	/// labeled alternative in <see cref="AbstractLuaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStat([NotNull] AbstractLuaParser.IfStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>forNmericStat</c>
	/// labeled alternative in <see cref="AbstractLuaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForNmericStat([NotNull] AbstractLuaParser.ForNmericStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>forGenericStat</c>
	/// labeled alternative in <see cref="AbstractLuaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForGenericStat([NotNull] AbstractLuaParser.ForGenericStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>functionDefStat</c>
	/// labeled alternative in <see cref="AbstractLuaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDefStat([NotNull] AbstractLuaParser.FunctionDefStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>localFunctionDefStat</c>
	/// labeled alternative in <see cref="AbstractLuaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocalFunctionDefStat([NotNull] AbstractLuaParser.LocalFunctionDefStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>localDeclarationStat</c>
	/// labeled alternative in <see cref="AbstractLuaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocalDeclarationStat([NotNull] AbstractLuaParser.LocalDeclarationStatContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>nilExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNilExp([NotNull] AbstractLuaParser.NilExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>falseExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFalseExp([NotNull] AbstractLuaParser.FalseExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>trueExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTrueExp([NotNull] AbstractLuaParser.TrueExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>numberExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberExp([NotNull] AbstractLuaParser.NumberExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>stringExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringExp([NotNull] AbstractLuaParser.StringExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>varargExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarargExp([NotNull] AbstractLuaParser.VarargExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>functionDefExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDefExp([NotNull] AbstractLuaParser.FunctionDefExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>prefixexpExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefixexpExp([NotNull] AbstractLuaParser.PrefixexpExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>tableCtorExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableCtorExp([NotNull] AbstractLuaParser.TableCtorExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>powExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPowExp([NotNull] AbstractLuaParser.PowExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>unaryExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExp([NotNull] AbstractLuaParser.UnaryExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>mulOrDivOrModExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMulOrDivOrModExp([NotNull] AbstractLuaParser.MulOrDivOrModExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>addOrSubExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddOrSubExp([NotNull] AbstractLuaParser.AddOrSubExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>concatExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConcatExp([NotNull] AbstractLuaParser.ConcatExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>compareExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareExp([NotNull] AbstractLuaParser.CompareExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>andExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExp([NotNull] AbstractLuaParser.AndExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>orExp</c>
	/// labeled alternative in <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExp([NotNull] AbstractLuaParser.OrExpContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>nameP0</c>
	/// labeled alternative in <see cref="AbstractLuaParser.prefixexp0"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNameP0([NotNull] AbstractLuaParser.NameP0Context context);

	/// <summary>
	/// Visit a parse tree produced by the <c>bracedExpP1</c>
	/// labeled alternative in <see cref="AbstractLuaParser.prefixexp0"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBracedExpP1([NotNull] AbstractLuaParser.BracedExpP1Context context);

	/// <summary>
	/// Visit a parse tree produced by the <c>indexerP1</c>
	/// labeled alternative in <see cref="AbstractLuaParser.prefixexp1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexerP1([NotNull] AbstractLuaParser.IndexerP1Context context);

	/// <summary>
	/// Visit a parse tree produced by the <c>nameAndArgsP1</c>
	/// labeled alternative in <see cref="AbstractLuaParser.prefixexp1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNameAndArgsP1([NotNull] AbstractLuaParser.NameAndArgsP1Context context);

	/// <summary>
	/// Visit a parse tree produced by the <c>nameLvalue</c>
	/// labeled alternative in <see cref="AbstractLuaParser.var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNameLvalue([NotNull] AbstractLuaParser.NameLvalueContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>indexerLvalue</c>
	/// labeled alternative in <see cref="AbstractLuaParser.var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexerLvalue([NotNull] AbstractLuaParser.IndexerLvalueContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>bracketIndexer</c>
	/// labeled alternative in <see cref="AbstractLuaParser.indexer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBracketIndexer([NotNull] AbstractLuaParser.BracketIndexerContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>dotIndexer</c>
	/// labeled alternative in <see cref="AbstractLuaParser.indexer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDotIndexer([NotNull] AbstractLuaParser.DotIndexerContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>bracedArgs</c>
	/// labeled alternative in <see cref="AbstractLuaParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBracedArgs([NotNull] AbstractLuaParser.BracedArgsContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>tablectorArgs</c>
	/// labeled alternative in <see cref="AbstractLuaParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTablectorArgs([NotNull] AbstractLuaParser.TablectorArgsContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>stringArgs</c>
	/// labeled alternative in <see cref="AbstractLuaParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringArgs([NotNull] AbstractLuaParser.StringArgsContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>namelistParlist</c>
	/// labeled alternative in <see cref="AbstractLuaParser.parlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamelistParlist([NotNull] AbstractLuaParser.NamelistParlistContext context);

	/// <summary>
	/// Visit a parse tree produced by the <c>varargParlist</c>
	/// labeled alternative in <see cref="AbstractLuaParser.parlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarargParlist([NotNull] AbstractLuaParser.VarargParlistContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.chunk"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitChunk([NotNull] AbstractLuaParser.ChunkContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] AbstractLuaParser.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.retstat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRetstat([NotNull] AbstractLuaParser.RetstatContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStat([NotNull] AbstractLuaParser.StatContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.elseifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseifBlock([NotNull] AbstractLuaParser.ElseifBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.elseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElseBlock([NotNull] AbstractLuaParser.ElseBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.funcname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncname([NotNull] AbstractLuaParser.FuncnameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.dotName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDotName([NotNull] AbstractLuaParser.DotNameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.colonName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitColonName([NotNull] AbstractLuaParser.ColonNameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.varlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarlist([NotNull] AbstractLuaParser.VarlistContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.namelist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamelist([NotNull] AbstractLuaParser.NamelistContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.explist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplist([NotNull] AbstractLuaParser.ExplistContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExp([NotNull] AbstractLuaParser.ExpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.opUnary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpUnary([NotNull] AbstractLuaParser.OpUnaryContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.opMulOrDivOrMod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpMulOrDivOrMod([NotNull] AbstractLuaParser.OpMulOrDivOrModContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.opAddOrSub"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpAddOrSub([NotNull] AbstractLuaParser.OpAddOrSubContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.opCmp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOpCmp([NotNull] AbstractLuaParser.OpCmpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.prefixexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefixexp([NotNull] AbstractLuaParser.PrefixexpContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.prefixexp0"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefixexp0([NotNull] AbstractLuaParser.Prefixexp0Context context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.prefixexp1"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefixexp1([NotNull] AbstractLuaParser.Prefixexp1Context context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.functioncall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctioncall([NotNull] AbstractLuaParser.FunctioncallContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVar([NotNull] AbstractLuaParser.VarContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.indexer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexer([NotNull] AbstractLuaParser.IndexerContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.nameAndArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNameAndArgs([NotNull] AbstractLuaParser.NameAndArgsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgs([NotNull] AbstractLuaParser.ArgsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.functiondef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctiondef([NotNull] AbstractLuaParser.FunctiondefContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.funcbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncbody([NotNull] AbstractLuaParser.FuncbodyContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.parlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParlist([NotNull] AbstractLuaParser.ParlistContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.tableconstructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableconstructor([NotNull] AbstractLuaParser.TableconstructorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.fieldlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFieldlist([NotNull] AbstractLuaParser.FieldlistContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitField([NotNull] AbstractLuaParser.FieldContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.fieldsep"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFieldsep([NotNull] AbstractLuaParser.FieldsepContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumber([NotNull] AbstractLuaParser.NumberContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="AbstractLuaParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] AbstractLuaParser.StringContext context);
}
} // namespace zlua.Compiler
